openapi: 3.0.0
info:
  version: 1.0.0
  title: Vizsgaremek API
  description: Reference documentation for all resource descriptions, endpoints and methods, parameters, sample requests, errors, and sample responses and schemas available to Vizsgaremek API.
servers:
  - url: http://localhost:3000
paths:
  /actor:
    get:
      description: Returns a list of actors
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of actors returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Actor'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new actor
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
      responses:
        '201':
          description: Person has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /actor/{actor_id}:
    get:
      description: Returns the actor with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: actor_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Actor data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
        '404':
          description: Actor with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a person
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Actor'
      responses:
        '201':
          description: Actor has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Actor'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /director:
    get:
      description: Returns a list of directors
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of directors returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Director'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new director
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Director'
      responses:
        '201':
          description: Director has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Director'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /director/{director_id}:
    get:
      description: Returns the director with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: director_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Director data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Director'
        '404':
          description: Director with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a director
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Director'
      responses:
        '201':
          description: Director has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Director'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /movie:
    get:
      description: Returns a list of movies
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of movies returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Movie'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new movie
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '201':
          description: Movie has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /movie/{movie_id}:
    get:
      description: Returns the movie with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: movie_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Movie data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '404':
          description: Movie with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a movie
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movie'
      responses:
        '201':
          description: Movie has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movie'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /rating:
    get:
      description: Returns a list of ratings
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of ratings returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rating'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new rating
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          description: Rating has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /rating/{rating_id}:
    get:
      description: Returns the rating with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: rating_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Rating data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
        '404':
          description: Rating with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a rating
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '201':
          description: Rating has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rating'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user:
    get:
      description: Returns a list of users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{user_id}:
    get:
      description: Returns the user with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Actor:
      type: object
      required:
        - firstName
        - lastName
        - year
      properties:
        firstName:
          type: string
        lastName:
          type: string
        year:
          type: number
        movie:
          type: string
        alive:
          type: boolean
        posts: 
          type: array
          items:
            $ref: '#/components/schemas/Actor'
    Director:
      type: object
      required:
        - firstName
        - lastName
        - year
      properties:
        firstName:
          type: string
        lastName:
          type: string
        year:
          type: number
        movie:
          type: string
        alive:
          type: boolean
        posts: 
          type: array
          items:
            $ref: '#/components/schemas/Director'
    Movie:
      type: object
      required:
        - title
        - year
      properties:
        title:
          type: string
        genre:
          type: string
        year:
          type: number
        producer:
          type: string
        watchlist:
          type: boolean
        posts: 
          type: array
          items:
            $ref: '#/components/schemas/Movie'
    Rating:
      type: object
      required:
        - movie
        - rating
        - year
      properties:
        movie:
          type: string
        year:
          type: number
        favourite:
          type: boolean
        rating:
          type: number
        description:
          type: string
        posts: 
          type: array
          items:
            $ref: '#/components/schemas/Rating'
    User:
      type: object
      required:
        - email
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        address:
          type: string
        active:
          type: boolean
        posts: 
          type: array
          items:
            $ref: '#/components/schemas/User'
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
